openapi: 3.0.4
info:
  title: ATS-Mini - OpenAPI 3.0
  description: |-
    ATS-Mini JSON Api definition for radio control and configuration
  version: 1.0.0
servers:
  - url: http://atsmini.local
  - url: http://10.1.1.1
tags:
  - name: status
    description: Radio status and information
  - name: memory
    description: Memory slot information
  - name: config
    description: Device configuration management
paths:
  /api/status:
    get:
      tags:
        - status
      summary: Get ATS-Mini status
      description: Returns current radio status including frequency, mode, signal strength, and RDS data
      operationId: getStatus
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - status
      summary: Set ATS-Mini status
      operationId: setStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusUpdate'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Invalid JSON
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/statusOptions:
    get:
      tags:
        - status
      summary: Get available status options
      description: Returns all available options for status fields like bands, etc.
      operationId: getStatusOptions
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOptions'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/memory:
    get:
      tags:
        - memory
      summary: Get ATS-Mini memories
      description: Returns all non-empty memory slots.
      operationId: getMemory
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Memory'
                description: Array of non-empty memory slots
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - memory
      summary: Bulk update memory slots
      description: Update multiple memory slots at once
      operationId: setBulkMemory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/MemoryUpdate'
      responses:
        '200':
          description: Successfully updated memory slots
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Memory'
        '400':
          description: Invalid JSON
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/memoryOptions:
    get:
      tags:
        - memory
      summary: Get memory configuration options
      description: Returns memory configuration information like total memory slot count
      operationId: getMemoryOptions
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemoryOptions'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/memory/{memoryIdx}:
    post:
      tags:
        - memory
      summary: Update a specific memory slot
      operationId: setMemory
      parameters:
        - name: memoryIdx
          in: path
          required: true
          description: Memory slot index to update
          schema:
            type: integer
            minimum: 0
            maximum: 98
            example: 5
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemoryUpdate'
      responses:
        '200':
          description: Successfully updated memory slot
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Memory'
        '400':
          description: Invalid memory index or invalid JSON
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - memory
      summary: Clear a memory slot
      operationId: clearMemory
      parameters:
        - name: memoryIdx
          in: path
          required: true
          description: Memory slot index to clear
          schema:
            type: integer
            minimum: 0
            maximum: 98
            example: 5
      responses:
        '200':
          description: Successfully cleared memory slot
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Memory'
        '400':
          description: Invalid memory index
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/memory/{memoryIdx}/storeCurrent:
    post:
      tags:
        - memory
      summary: Store current frequency to a memory slot
      operationId: storeCurrentToMemory
      parameters:
        - name: memoryIdx
          in: path
          required: true
          description: Memory slot index to store to
          schema:
            type: integer
            minimum: 0
            maximum: 98
            example: 5
      responses:
        '200':
          description: Successfully stored to memory slot
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Memory'
        '400':
          description: Invalid memory index or memory slot is not empty
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/memory/{memoryIdx}/tune:
    post:
      tags:
        - memory
      summary: Tune to a memory slot
      operationId: tuneToMemory
      parameters:
        - name: memoryIdx
          in: path
          required: true
          description: Memory slot index to tune to
          schema:
            type: integer
            minimum: 0
            maximum: 98
            example: 5
      responses:
        '200':
          description: Successfully tuned to memory slot
        '400':
          description: Invalid memory index or memory slot is empty
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Failed tuning to memory
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/config:
    get:
      tags:
        - config
      summary: Get ATS-Mini configuration
      description: Returns current device configuration including WiFi, display, and radio settings
      operationId: getConfig
      security:
        - basicAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
        '401':
          description: Authentication required
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - config
      summary: Update ATS-Mini configuration
      description: Updates device configuration. Only provided fields will be updated.
      operationId: setConfig
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigUpdate'
      responses:
        '200':
          description: Configuration updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
        '400':
          description: Invalid JSON
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: Authentication required
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/configOptions:
    get:
      tags:
        - config
      summary: Get available configuration options
      description: Returns all available options for configuration fields like themes, UTC offsets, etc.
      operationId: getConfigOptions
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigOptions'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic

  schemas:
    Status:
      type: object
      required:
        - ip
        - ssid
        - mac
        - version
        - bandIdx
        - freq
        - modeIdx
        - rssi
        - snr
        - battery
        - stepIdx
        - bandwidthIdx
        - agc
        - volume
        - squelch
      properties:
        ip:
          type: string
          description: Current IP address
          example: "10.1.1.1"
        ssid:
          type: string
          description: WiFi SSID or device name in AP mode
          example: "ATS-Mini"
        mac:
          type: string
          description: Device MAC address
          example: "98:A3:16:C1:DA:9C"
        version:
          type: string
          description: Firmware version string
          example: "F/W: v2.28d Jul 27 2025"
        bandIdx:
          type: number
          description: Current band index (references bands array from statusOptions)
          example: 0
        freq:
          type: number
          description: Current frequency in Hz (includes BFO offset for non-FM modes)
          example: 94200000
        modeIdx:
          type: number
          description: Current modulation mode index (references modes array from statusOptions)
          example: 0
        rssi:
          type: number
          description: Received signal strength indicator
          example: 44
        snr:
          type: number
          description: Signal-to-noise ratio in dB
          example: 20
        battery:
          type: number
          format: float
          description: Battery voltage in volts
          example: 3.878347
        stepIdx:
          type: number
          description: Current frequency step index (references bands array from statusOptions)
          example: 0
        bandwidthIdx:
          type: number
          description: Current bandwidth index (references bands array from statusOptions)
          example: 1
        agc:
          type: boolean
          description: Automatic Gain Control status (true when AGC is enabled)
          example: false
        attenuation:
          type: number
          description: Manual attenuation level (only present when AGC is disabled)
          example: 10
        time:
          type: string
          description: Current time in HH:MM format (only present when clock is available)
          example: "15:49"
        volume:
          type: number
          description: Current volume level
          example: 50
        squelch:
          type: number
          description: Current squelch level (squelch off when 0)
          example: 7
        softMuteMaxAttIdx:
          type: number
          description: Soft mute maximum attenuation (present for SSB and AM modes)
          example: 4
        avc:
          type: number
          description: Automatic Volume Control setting (present for SSB and AM modes)
          example: 10
        rds:
          type: object
          description: RDS (Radio Data System) information (only present in FM mode)
          properties:
            piCode:
              type: string
              description: Program Identification code in hexadecimal (only present when available)
              example: "5241"
            stationName:
              type: string
              description: Station name from RDS PS (Program Service) data (only present when available)
              example: " VIRGIN "
            radioText:
              type: string
              example: "In onda MGK con CLICHE'"
              description: Radio text from RDS RT (Radio Text) data (only present when available)
            programInfo:
              type: string
              description: Program type information from RDS PTY (Program Type) data (only present when available)
              example: "Rock Music"

    StatusUpdate:
      type: object
      properties:
        bandIdx:
          type: number
          description: "Band index"
          example: 0
        freq:
          type: number
          description: "Frequency to set in Hz"
          example: 94200000
        stepIdx:
          type: number
          description: "Frequency step index"
          example: 2
        bandwidthIdx:
          type: number
          description: "Bandwidth index"
          example: 1
        agc:
          type: boolean
          description: "Automatic Gain Control enable/disable"
          example: true
        attenuation:
          type: integer
          description: "Manual attenuation level (0-26 for FM, 0 for SSB, 0-36 for AM). Setting this parameter disables AGC."
          minimum: 0
          example: 10
        volume:
          type: number
          description: "Volume level (0-63)"
          minimum: 0
          maximum: 63
          example: 50
        squelch:
          type: number
          description: "Squelch (0-127)"
          minimum: 0
          maximum: 127
          example: 50
        softMuteMaxAttIdx:
          type: number
          description: "Soft mute max attenuation (0-32)"
          minimum: 0
          maximum: 32
          example: 4
        avc:
          type: number
          description: "AVC (12-90)"
          minimum: 12
          maximum: 90
          example: 46

    StatusOptions:
      type: object
      required:
        - bands
        - steps
        - bandwidths
      properties:
        bands:
          type: array
          description: Available bands with their configuration including frequency ranges, modes, and current settings
          items:
            $ref: '#/components/schemas/Band'
        steps:
          type: object
          description: Available steps divided by mode
          properties:
            fm:
              type: array
              description: FM steps
              items:
                $ref: '#/components/schemas/Step'
            ssb:
              type: array
              description: SSB steps
              items:
                $ref: '#/components/schemas/Step'
            am:
              type: array
              description: AM steps
              items:
                $ref: '#/components/schemas/Step'
        bandwidths:
          type: object
          description: Available bandwidths divided by mode
          properties:
            fm:
              type: array
              description: FM bandwidths
              items:
                $ref: '#/components/schemas/Bandwidth'
            ssb:
              type: array
              description: SSB bandwidths
              items:
                $ref: '#/components/schemas/Bandwidth'
            am:
              type: array
              description: AM bandwidths
              items:
                $ref: '#/components/schemas/Bandwidth'
        modes:
          type: array
          description: Available mode options
          items:
            $ref: '#/components/schemas/Mode'

    Band:
      type: object
      required:
        - id
        - name
        - type
        - modeIdx
        - minimumFreq
        - maximumFreq
        - currentFreq
        - currentStepIdx
        - bandwidthIdx
        - bandCal
      properties:
        id:
          type: integer
          description: Band index
          example: 0
        name:
          type: string
          description: Band name
          example: "VHF"
        type:
          type: integer
          description: Band type
          example: 0
        modeIdx:
          type: integer
          description: Band mode index (references modes array from statusOptions)
          example: 0
        minimumFreq:
          type: number
          description: Minimum frequency for this band in Hz
          example: 64000000
        maximumFreq:
          type: number
          description: Maximum frequency for this band in Hz
          example: 108000000
        currentFreq:
          type: number
          description: Current frequency for this band in Hz
          example: 94200000
        currentStepIdx:
          type: integer
          description: Current step index
          example: 2
        bandwidthIdx:
          type: integer
          description: Current bandwidth index
          example: 0
        bandCal:
          type: integer
          description: Band calibration offset
          example: 0

    Step:
      type: object
      required:
        - id
        - step
        - desc
        - spacing
      properties:
        id:
          type: number
          description: Step index
          example: 3
        step:
          type: number
          description: Step size
          example: 20
        desc:
          type: string
          description: Step description
          example: "200k"
        spacing:
          type: integer
          description: Step spacing
          example: 20

    Bandwidth:
      type: object
      required:
        - id
        - idx
        - desc
      properties:
        id:
          type: number
          description: Bandwidth index
          example: 0
        idx:
          type: number
          description: Bandwidth radio index
          example: 2
        desc:
          type: string
          description: Bandwith description
          example: "3.0k"

    Mode:
      type: object
      required:
        - id
        - mode
      properties:
        id:
          type: number
          description: Mode option index
          example: 3
        mode:
          type: string
          description: Mode
          example: FM

    Memory:
      type: object
      description: Memory slot data. Empty objects represent unused slots.
      required:
        - id
        - freq
        - modeIdx
        - bandIdx
        - name
      properties:
        id:
          type: integer
          description: Memory slot ID
          example: 0
        freq:
          type: number
          description: Frequency in Hz
          example: 94200000
        bandIdx:
          type: integer
          description: Band index (references bands array from statusOptions)
          example: 0
        modeIdx:
          type: integer
          description: Modulation mode index (references modes array from statusOptions)
          example: 0
        name:
          type: string
          description: Memory name
          example: "Example"

    MemoryUpdate:
      type: object
      required:
        - id
        - freq
        - modeIdx
        - bandIdx
        - name
      properties:
        id:
          type: integer
          description: Memory slot ID
          example: 0
        freq:
          type: number
          description: Frequency in Hz
          example: 94200000
        bandIdx:
          type: integer
          description: Band index (references bands array from statusOptions)
          example: 0
        modeIdx:
          type: integer
          description: Modulation mode index (references modes array from statusOptions)
          example: 0
        name:
          type: string
          description: Memory name
          example: "Example"

    MemoryOptions:
      type: object
      required:
        - size
      properties:
        size:
          type: integer
          description: Total number of memory slots available
          example: 99

    Config:
      type: object
      required:
        - username
        - password
        - wifissid1
        - wifipass1
        - wifissid2
        - wifipass2
        - wifissid3
        - wifipass3
        - brightness
        - calibration
        - utcOffsetIdx
        - rdsModeIdx
        - fmRegionIdx
        - themeIdx
        - uiLayoutIdx
        - zoomMenu
        - scrollDirection
        - sleepModeIdx
        - wifiModeIdx
      properties:
        username:
          type: string
          description: Web interface login username (empty string means no authentication)
          example: ""
        password:
          type: string
          description: Web interface login password (empty string means no authentication)
          example: ""
        wifissid1:
          type: string
          description: First WiFi network SSID
          example: ""
        wifipass1:
          type: string
          description: First WiFi network password
          example: ""
        wifissid2:
          type: string
          description: Second WiFi network SSID
          example: ""
        wifipass2:
          type: string
          description: Second WiFi network password
          example: ""
        wifissid3:
          type: string
          description: Third WiFi network SSID
          example: ""
        wifipass3:
          type: string
          description: Third WiFi network password
          example: ""
        brightness:
          type: number
          description: Display brightness level
          example: 130
        calibration:
          type: number
          description: Frequency calibration offset for current band
          example: 0
        rdsModeIdx:
          type: number
          description: RDS mode index (references rdsModes array from configOptions)
          example: 6
        utcOffsetIdx:
          type: integer
          description: UTC offset index (references UTCOffsets array from configOptions)
          example: 8
        fmRegionIdx:
          type: number
          description: FM region index (references fmRegions array from configOptions)
          example: 0
        themeIdx:
          type: integer
          description: Theme index (references themes array from configOptions)
          example: 0
        uiLayoutIdx:
          type: number
          example: 1
          description: UI layout index (references uiLayouts array from configOptions)
        zoomMenu:
          type: boolean
          description: Whether menu zoom is enabled
          example: false
        scrollDirection:
          type: integer
          example: 1
          enum: [-1, 1]
          description: Scroll direction (-1 or 1)
        sleepModeIdx:
          type: number
          description: Sleep mode index (references sleepModes array from configOptions)
          example: 0
        wifiModeIdx:
          type: number
          example: 3

    ConfigUpdate:
      type: object
      description: Configuration update request. All fields are optional - only provided fields will be updated.
      properties:
        username:
          type: string
          description: Web interface login username
        password:
          type: string
          description: Web interface login password
        wifissid1:
          type: string
          description: First WiFi network SSID
        wifipass1:
          type: string
          description: First WiFi network password
        wifissid2:
          type: string
          description: Second WiFi network SSID
        wifipass2:
          type: string
          description: Second WiFi network password
        wifissid3:
          type: string
          description: Third WiFi network SSID
        wifipass3:
          type: string
          description: Third WiFi network password
        brightness:
          type: number
          description: Display brightness level
        calibration:
          type: number
          description: Frequency calibration offset
        rdsModeIdx:
          type: number
          description: RDS mode index
        utcOffsetIdx:
          type: integer
          description: UTC offset index
        fmRegionIdx:
          type: number
          description: FM region index
        themeIdx:
          type: integer
          description: Theme index
        uiLayoutIdx:
          type: number
          description: UI layout index
        zoomMenu:
          type: boolean
          description: Menu zoom setting
        scrollDirection:
          type: integer
          description: Scroll direction (-1 or 1)
          enum: [-1, 1]
        sleepModeIdx:
          type: number
          description: Sleep mode index

    ConfigOptions:
      type: object
      required:
        - rdsModes
        - UTCOffsets
        - fmRegions
        - themes
        - uiLayouts
        - sleepModes
        - wifiModes
      properties:
        rdsModes:
          type: array
          description: Available RDS (Radio Data System) mode options
          items:
            $ref: '#/components/schemas/RdsMode'
        UTCOffsets:
          type: array
          description: Available UTC time zone offsets
          items:
            $ref: '#/components/schemas/UTCOffset'
        fmRegions:
          type: array
          description: Available FM region settings (affects de-emphasis and frequency ranges)
          items:
            $ref: '#/components/schemas/FmRegion'
        themes:
          type: array
          description: Available themes
          items:
            $ref: '#/components/schemas/Theme'
        uiLayouts:
          type: array
          description: Available UI layout options
          items:
            $ref: '#/components/schemas/UiLayout'
        sleepModes:
          type: array
          description: Available device sleep mode options
          items:
            $ref: '#/components/schemas/SleepMode'
        wifiModes:
          type: array
          description: Available device wifi mode options
          items:
            $ref: '#/components/schemas/WifiMode'

    RdsMode:
      type: object
      required:
        - id
        - mode
        - desc
      properties:
        id:
          type: number
          description: RDS mode option index
          example: 3
        mode:
          type: number
          description: Internal RDS mode value/bitmask
          example: 7
        desc:
          type: string
          description: Human-readable RDS mode description
          example: "PS+PI+CT"

    UTCOffset:
      type: object
      required:
        - id
        - offset
        - desc
        - city
      properties:
        id:
          type: integer
          description: UTC offset index
          example: 0
        offset:
          type: integer
          description: UTC offset in quarter hours
          example: -32
        desc:
          type: string
          description: UTC offset description
          example: "UTC-8"
        city:
          type: string
          description: Representative city
          example: "Fairbanks"

    FmRegion:
      type: object
      required:
        - id
        - value
        - desc
      properties:
        id:
          type: number
          description: FM region option index
          example: 0
        value:
          type: number
          description: Internal FM region value
          example: 1
        desc:
          type: string
          description: FM region description
          example: "EU/JP/AU"

    Theme:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          description: Theme index
          example: 0
        name:
          type: string
          description: Theme name
          example: "Default"

    UiLayout:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: number
          description: UI layout index
          example: 0
        name:
          type: string
          description: UI layout name
          example: "Default"

    SleepMode:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: number
          description: Sleep mode index
          example: 0
        name:
          type: string
          description: Sleep mode name
          example: "Locked"

    WifiMode:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: number
          example: 3
        name:
          type: string
          example: "Connect"

    Error:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          description: Error message describing what went wrong
          example: "Invalid JSON"
